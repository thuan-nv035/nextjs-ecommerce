{"ast":null,"code":"import _regeneratorRuntime from \"E:/Nextjs/next-cy/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCategory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(CategorySaga);\n\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getCategorySuccess, getCategoryError } from \"../actions/category\";\nimport { GET_CATEGORY } from \"../contants/category\";\nexport function getCategory(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function getCategory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"categories/get?id_website=4\";\n          _context.prev = 1;\n          _context.next = 4;\n          return call(Request, url);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(getCategorySuccess(response));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getCategoryError(_context.t0.message));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\nexport default function CategorySaga() {\n  return _regeneratorRuntime.wrap(function CategorySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = all;\n          _context2.next = 3;\n          return takeLatest(GET_CATEGORY, getCategory);\n\n        case 3:\n          _context2.t1 = _context2.sent;\n          _context2.t2 = [_context2.t1];\n          _context2.next = 7;\n          return (0, _context2.t0)(_context2.t2);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n_c = CategorySaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategorySaga\");","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/category.js"],"names":["getCategory","CategorySaga","put","takeLatest","all","call","Request","getCategorySuccess","getCategoryError","GET_CATEGORY","action","url","response","message"],"mappings":";;oDAWiBA,W;qDAUQC,Y;;AArBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,QAGO,qBAHP;AAKA,SAASC,YAAT,QAA4B,sBAA5B;AAEA,OAAO,SAAUT,WAAV,CAAsBU,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,UAAAA,GADH;AAAA;AAAA;AAGkB,iBAAMN,IAAI,CAACC,OAAD,EAAUK,GAAV,CAAV;;AAHlB;AAGOC,UAAAA,QAHP;AAAA;AAIC,iBAAMV,GAAG,CAACK,kBAAkB,CAACK,QAAD,CAAnB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMV,GAAG,CAACM,gBAAgB,CAAC,YAAMK,OAAP,CAAjB,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,eAAe,SAAUZ,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLG,GADK;AAAA;AAEP,iBAAMD,UAAU,CAACM,YAAD,EAAeT,WAAf,CAAhB;;AAFO;AAAA;AAAA;AAAA;AACX;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;KAAUC,Y","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getCategorySuccess,\r\n    getCategoryError,\r\n} from \"../actions/category\";\r\n\r\nimport { GET_CATEGORY} from \"../contants/category\";\r\n\r\nexport function* getCategory(action) {\r\n    const url = `categories/get?id_website=4`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getCategorySuccess(response));\r\n    } catch (error) {\r\n        yield put(getCategoryError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* CategorySaga() {\r\n    yield all([\r\n        yield takeLatest(GET_CATEGORY, getCategory),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}