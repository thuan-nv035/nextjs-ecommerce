{"ast":null,"code":"import _regeneratorRuntime from \"E:/Nextjs/next-cy/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getArticle),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(SlideSaga);\n\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getArticleSuccess, getArticleError } from \"../actions/article\";\nimport { GET_ARTICLE } from \"../contants/article\";\nexport function getArticle(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function getArticle$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"api/banners/get?active=1&id_website=4&&page_type=\".concat(action.offset.page_type);\n          _context.prev = 1;\n          _context.next = 4;\n          return call(Request, url);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(getArticleSuccess(response));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getArticleError(_context.t0.message));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\nexport default function SlideSaga() {\n  return _regeneratorRuntime.wrap(function SlideSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = all;\n          _context2.next = 3;\n          return takeLatest(GET_ARTICLE, getArticle);\n\n        case 3:\n          _context2.t1 = _context2.sent;\n          _context2.t2 = [_context2.t1];\n          _context2.next = 7;\n          return (0, _context2.t0)(_context2.t2);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n_c = SlideSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideSaga\");","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/article.js"],"names":["getArticle","SlideSaga","put","takeLatest","all","call","Request","getArticleSuccess","getArticleError","GET_ARTICLE","action","url","offset","page_type","response","message"],"mappings":";;oDAWiBA,U;qDAUQC,S;;AArBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,iBADJ,EAEIC,eAFJ,QAGO,oBAHP;AAKA,SAASC,WAAT,QAA2B,qBAA3B;AAEA,OAAO,SAAUT,UAAV,CAAqBU,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,UAAAA,GADH,8DAC6DD,MAAM,CAACE,MAAP,CAAcC,SAD3E;AAAA;AAAA;AAGkB,iBAAMR,IAAI,CAACC,OAAD,EAAUK,GAAV,CAAV;;AAHlB;AAGOG,UAAAA,QAHP;AAAA;AAIC,iBAAMZ,GAAG,CAACK,iBAAiB,CAACO,QAAD,CAAlB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMZ,GAAG,CAACM,eAAe,CAAC,YAAMO,OAAP,CAAhB,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,eAAe,SAAUd,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLG,GADK;AAAA;AAEP,iBAAMD,UAAU,CAACM,WAAD,EAAcT,UAAd,CAAhB;;AAFO;AAAA;AAAA;AAAA;AACX;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;KAAUC,S","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getArticleSuccess,\r\n    getArticleError,\r\n} from \"../actions/article\";\r\n\r\nimport { GET_ARTICLE} from \"../contants/article\";\r\n\r\nexport function* getArticle(action) {\r\n    const url = `api/banners/get?active=1&id_website=4&&page_type=${action.offset.page_type}`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getArticleSuccess(response));\r\n    } catch (error) {\r\n        yield put(getArticleError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* SlideSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_ARTICLE, getArticle),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}