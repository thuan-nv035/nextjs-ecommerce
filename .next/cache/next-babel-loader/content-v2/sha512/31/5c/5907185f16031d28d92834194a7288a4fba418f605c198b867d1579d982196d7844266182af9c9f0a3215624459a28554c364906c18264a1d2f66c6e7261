{"ast":null,"code":"import _regeneratorRuntime from \"E:/Nextjs/next-cy/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getSellingProducts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(ProductSaga);\n\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getSellingProductsSuccess, getSellingProductsError } from \"../actions/product\";\nimport { GET_SELLING_PRODUCTS } from \"../contants/product\";\nexport function getSellingProducts(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function getSellingProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"products/get?active=1&id_parent=0&id_website=4\";\n          _context.prev = 1;\n          _context.next = 4;\n          return call(Request, url);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(getSellingProductsSuccess(response));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getSellingProductsError(_context.t0.message));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\nexport default function ProductSaga() {\n  return _regeneratorRuntime.wrap(function ProductSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = all;\n          _context2.next = 3;\n          return takeLatest(GET_SELLING_PRODUCTS, getSellingProducts);\n\n        case 3:\n          _context2.t1 = _context2.sent;\n          _context2.t2 = [_context2.t1];\n          _context2.next = 7;\n          return (0, _context2.t0)(_context2.t2);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n_c = ProductSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSaga\");","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/product.js"],"names":["getSellingProducts","ProductSaga","put","takeLatest","all","call","Request","getSellingProductsSuccess","getSellingProductsError","GET_SELLING_PRODUCTS","action","url","response","message"],"mappings":";;oDAWiBA,kB;qDAWQC,W;;AAtBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACEC,yBADF,EAEEC,uBAFF,QAGO,oBAHP;AAKA,SAASC,oBAAT,QAAqC,qBAArC;AAEA,OAAO,SAAUT,kBAAV,CAA6BU,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,UAAAA,GADD;AAAA;AAAA;AAGc,iBAAMN,IAAI,CAACC,OAAD,EAAUK,GAAV,CAAV;;AAHd;AAGGC,UAAAA,QAHH;AAAA;AAIH,iBAAMV,GAAG,CAACK,yBAAyB,CAACK,QAAD,CAA1B,CAAT;;AAJG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMH,iBAAMV,GAAG,CAACM,uBAAuB,CAAC,YAAMK,OAAP,CAAxB,CAAT;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,eAAe,SAAUZ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA,yBACPG,GADO;AAAA;AAEX,iBAAMD,UAAU,CAACM,oBAAD,EAAuBT,kBAAvB,CAAhB;;AAFW;AAAA;AAAA;AAAA;AACb;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;KAAUC,W","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n  getSellingProductsSuccess,\r\n  getSellingProductsError,\r\n} from \"../actions/product\";\r\n\r\nimport { GET_SELLING_PRODUCTS } from \"../contants/product\";\r\n\r\nexport function* getSellingProducts(action) {\r\n  const url = `products/get?active=1&id_parent=0&id_website=4`;\r\n  try {\r\n    const response = yield call(Request, url);\r\n    yield put(getSellingProductsSuccess(response));\r\n  } catch (error) {\r\n    yield put(getSellingProductsError(error.message));\r\n  }\r\n}\r\n\r\n\r\nexport default function* ProductSaga() {\r\n  yield all([\r\n    yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}