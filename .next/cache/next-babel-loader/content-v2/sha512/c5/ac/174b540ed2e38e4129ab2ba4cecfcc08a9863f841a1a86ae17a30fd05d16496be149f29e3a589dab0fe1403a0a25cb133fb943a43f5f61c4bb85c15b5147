{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getProductsSuccess, getProductsError, getSellingProductsSuccess, getSellingProductsError } from \"../actions/product\";\nimport { GET_PRODUCTS, GET_SELLING_PRODUCTS } from \"../contants/product\";\nexport function* getProducts(action) {\n  const url = `products/get?active=1&id_cat=2&id_website=4`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsError(error.message));\n  }\n}\nexport function* getSellingProducts(action) {\n  const url = `products/get?active=1&id_cat=2&id_website=4&feature=1`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getSellingProductsSuccess(response));\n  } catch (error) {\n    yield put(getSellingProductsError(error.message));\n  }\n}\nexport default function* ProductSaga() {\n  yield all([yield takeLatest(GET_PRODUCTS, getProducts), yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts)]);\n}","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/product.js"],"names":["put","takeLatest","all","call","Request","getProductsSuccess","getProductsError","getSellingProductsSuccess","getSellingProductsError","GET_PRODUCTS","GET_SELLING_PRODUCTS","getProducts","action","url","response","error","message","getSellingProducts","ProductSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,QAKO,oBALP;AAOA,SAAQC,YAAR,EAAsBC,oBAAtB,QAAiD,qBAAjD;AAEA,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AACjC,QAAMC,GAAG,GAAI,6CAAb;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACC,OAAD,EAAUS,GAAV,CAA3B;AACA,UAAMb,GAAG,CAACK,kBAAkB,CAACS,QAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACM,gBAAgB,CAACS,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,kBAAV,CAA6BL,MAA7B,EAAqC;AACxC,QAAMC,GAAG,GAAI,uDAAb;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACC,OAAD,EAAUS,GAAV,CAA3B;AACA,UAAMb,GAAG,CAACO,yBAAyB,CAACO,QAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACQ,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,eAAe,UAAUE,WAAV,GAAwB;AACnC,QAAMhB,GAAG,CAAC,CACN,MAAMD,UAAU,CAACQ,YAAD,EAAeE,WAAf,CADV,EAEN,MAAMV,UAAU,CAACS,oBAAD,EAAuBO,kBAAvB,CAFV,CAAD,CAAT;AAIH","sourcesContent":["import {put, takeLatest, all, call} from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getProductsSuccess,\r\n    getProductsError,\r\n    getSellingProductsSuccess,\r\n    getSellingProductsError,\r\n} from \"../actions/product\";\r\n\r\nimport {GET_PRODUCTS, GET_SELLING_PRODUCTS} from \"../contants/product\";\r\n\r\nexport function* getProducts(action) {\r\n    const url = `products/get?active=1&id_cat=2&id_website=4`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getSellingProducts(action) {\r\n    const url = `products/get?active=1&id_cat=2&id_website=4&feature=1`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getSellingProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getSellingProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* ProductSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_PRODUCTS, getProducts),\r\n        yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}