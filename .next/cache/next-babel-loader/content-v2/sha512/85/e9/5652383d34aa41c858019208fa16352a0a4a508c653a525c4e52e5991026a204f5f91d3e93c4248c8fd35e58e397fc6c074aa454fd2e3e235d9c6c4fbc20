{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getSellingProductsSuccess, getSellingProductsError } from \"../actions/product\";\nimport { GET_PRODUCT, GET_DETAIL } from \"../contants/product\";\nexport function* getProduct(action) {\n  const url = `products/get?active=1&id_parent=0&id_website=4`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getSellingProductsSuccess(response));\n  } catch (error) {\n    yield put(getSellingProductsError(error.message));\n  }\n}\nexport default function* ProductSaga() {\n  yield all([yield takeLatest(GET_PRODUCT, getProduct)]);\n}","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/product.js"],"names":["put","takeLatest","all","call","Request","getSellingProductsSuccess","getSellingProductsError","GET_PRODUCT","GET_DETAIL","getProduct","action","url","response","error","message","ProductSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACEC,yBADF,EAEEC,uBAFF,QAGO,oBAHP;AAKA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,qBAAxC;AAEA,OAAO,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAClC,QAAMC,GAAG,GAAI,gDAAb;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACC,OAAD,EAAUO,GAAV,CAA3B;AACA,UAAMX,GAAG,CAACK,yBAAyB,CAACO,QAAD,CAA1B,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAGD,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMb,GAAG,CAAC,CACR,MAAMD,UAAU,CAACM,WAAD,EAAcE,UAAd,CADR,CAAD,CAAT;AAGD","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n  getSellingProductsSuccess,\r\n  getSellingProductsError,\r\n} from \"../actions/product\";\r\n\r\nimport { GET_PRODUCT, GET_DETAIL } from \"../contants/product\";\r\n\r\nexport function* getProduct(action) {\r\n  const url = `products/get?active=1&id_parent=0&id_website=4`;\r\n  try {\r\n    const response = yield call(Request, url);\r\n    yield put(getSellingProductsSuccess(response));\r\n  } catch (error) {\r\n    yield put(getSellingProductsError(error.message));\r\n  }\r\n}\r\n\r\n\r\nexport default function* ProductSaga() {\r\n  yield all([\r\n    yield takeLatest(GET_PRODUCT, getProduct),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}